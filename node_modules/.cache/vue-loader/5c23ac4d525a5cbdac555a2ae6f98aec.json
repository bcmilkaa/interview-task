{"remainingRequest":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Basti\\source\\repos\\interview-task\\components\\InputBar.vue?vue&type=style&index=0&id=5e836878&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\components\\InputBar.vue","mtime":1620146299103},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi9jb2xvci5zY3NzJzsKCi5pbnB1dCB7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDhweCAxMHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgJHZ1ZS1ibHVlOwp9Cg=="},{"version":3,"sources":["InputBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA","file":"InputBar.vue","sourceRoot":"components","sourcesContent":["<template>\r\n    <input type=\"text\"\r\n           class=\"input\"\r\n           :value=\"value\"\r\n           v-on=\"listeners\">\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: '',\r\n    }\r\n  },\r\n  computed: {\r\n    listeners () {\r\n      return {\r\n        // Pass all component listeners directly to input\r\n        ...this.$listeners,\r\n        // Override input listener to work with v-model\r\n        input: event => this.$emit('input', event.target.value)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../color.scss';\r\n\r\n    .input {\r\n        width: 100%;\r\n        padding: 8px 10px;\r\n        border: 1px solid $vue-blue;\r\n    }\r\n</style>"]}]}