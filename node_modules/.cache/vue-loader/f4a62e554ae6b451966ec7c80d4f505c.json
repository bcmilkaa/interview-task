{"remainingRequest":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Basti\\source\\repos\\interview-task\\components\\DoneList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\components\\DoneList.vue","mtime":1620816524442},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Basti\\source\\repos\\interview-task\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi4vc3JjL2Fzc2V0cy9MaXN0LmNzcyc7Cg=="},{"version":3,"sources":["DoneList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA","file":"DoneList.vue","sourceRoot":"components","sourcesContent":["<template>\r\n    <div>\r\n        <h1 class=\"doneListTitle\">Finished tasks</h1>\r\n        <ul v-if=\"dones.length\" class=\"doneList\">\r\n            <ListItem class=\"doneListElement\"\r\n                      v-for=\"todo in dones\"\r\n                      :key=\"todo.id\"\r\n                      :todo=\"todo\"\r\n                      @remove=\"NotDone(todo.id, todo)\" />\r\n        </ul>\r\n        <ul v-else class=\"doneList\">\r\n            Nothing done so far, don't be lazzy!\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ListItem from './ListItem.vue';\r\n    import ToDoList from './ToDoList.vue';\r\n\r\n\r\n    export default {\r\n        components: {\r\n            ListItem, ToDoList\r\n        },\r\n        props: [\r\n            'dones'\r\n        ],\r\n\r\n        methods: {\r\n\r\n            // Triggers the addDone Method from the parent ToDoList\r\n            NotDone(idToRemove, todo) {\r\n                this.$emit('clicked', todo, todo.id)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    @import '../src/assets/List.css';\r\n</style>\r\n"]}]}